---
#name: amba-analysis-stream
version: "3"

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: unless-stopped
    hostname: zookeeper
#    ports:
#      - "2181:2181"
    networks:
      - ambaanalysisnet

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
#    ports:
#      - "9092:9092"
    hostname: kafka
    restart: unless-stopped
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_CREATE_TOPICS: "${KAFKA_CREATE_TOPICS}"
      KAFKA_ADVERTISED_HOST_NAME: "${KAFKA_ADVERTISED_HOST_NAME}"
      KAFKA_ZOOKEEPER_CONNECT: "${KAFKA_ZOOKEEPER_CONNECT}"
      KAFKA_ADVERTISED_PORT: "${KAFKA_ADVERTISED_PORT}"
      KAFKA_ADVERTISED_LISTENERS: "${KAFKA_ADVERTISED_LISTENERS_PREFIX}${KAFKA_BOOTRSTRAP_SERVER}"
    networks:
      - ambaanalysisnet

  connector-twitter:
    image: ghcr.io/ambalytics/amba-connector-twitter/amba-connector-twitter:latest
    container_name: connector-twitter
    depends_on:
      - kafka
    restart: unless-stopped
    environment:
      KAFKA_BOOTRSTRAP_SERVER: ${KAFKA_BOOTRSTRAP_SERVER}
      TWITTER_BEARER_TOKEN: ${TWITTER_BEARER_TOKEN}
      SENTRY_DSN: 'https://36b75f4025a54ef1ade6069d311dc0c1@apm.ambalytics.com/8'
      SENTRY_TRACES_SAMPLE_RATE: 1.0
    networks:
      - ambaanalysisnet

  twitter-perculator:
    image: ghcr.io/ambalytics/amba-analysis-worker-perculator/amba-analysis-worker-perculator:latest
    container_name: twitter-perculator
    depends_on:
      - kafka
      - postgres
    restart: unless-stopped
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KAFKA_BOOTRSTRAP_SERVER: ${KAFKA_BOOTRSTRAP_SERVER}
      SENTRY_DSN: 'https://ce9c4c51fbe842cca7c8736cc33e50b6@apm.ambalytics.com/9'
      SENTRY_TRACES_SAMPLE_RATE: 1.0
    networks:
      - ambaanalysisnet

  worker-discussion:
    image: ghcr.io/ambalytics/amba-analysis-worker-discussion/amba-analysis-worker-discussion:latest
    container_name: worker-discussion
    depends_on:
      - kafka
      - postgres
      - influxdb
    restart: unless-stopped
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KAFKA_BOOTRSTRAP_SERVER: ${KAFKA_BOOTRSTRAP_SERVER}
      INFLUXDB_TOKEN: ${INFLUXDB_TOKEN}
      INFLUXDB_ORG: ${INFLUXDB_ORG}
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      INFLUXDB_PORT: ${INFLUXDB_PORT}
      SENTRY_DSN: 'https://a6c6f9c04b38487e8d85f2b0e22cb7df@apm.ambalytics.com/7'
      SENTRY_TRACES_SAMPLE_RATE: 1.0
    networks:
      - ambaanalysisnet

  worker-pubfinder: # --build for restart
    image: ghcr.io/ambalytics/amba-analysis-worker-pubfinder/amba-analysis-worker-pubfinder:latest
    container_name: worker-pubfinder
    restart: unless-stopped
    depends_on:
      - kafka
      - postgres
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KAFKA_BOOTRSTRAP_SERVER: ${KAFKA_BOOTRSTRAP_SERVER}
      SENTRY_DSN: 'https://f0dfcffd7b53402eb4733e76dad63212@apm.ambalytics.com/10'
      SENTRY_TRACES_SAMPLE_RATE: 1.0
    networks:
      - ambaanalysisnet

  aggregator:
    image: ghcr.io/ambalytics/amba-analysis-worker-aggregator/amba-analysis-worker-aggregator:latest
    container_name: aggregator
    depends_on:
      - kafka
      - postgres
      - influxdb
    restart: unless-stopped
    environment:
      KAFKA_BOOTRSTRAP_SERVER: ${KAFKA_BOOTRSTRAP_SERVER}
      INFLUXDB_V2_TOKEN: ${INFLUXDB_TOKEN}
      INFLUXDB_V2_ORG: ${INFLUXDB_ORG}
      INFLUXDB_V2_URL: 'http://influxdb:8086'
      INFLUXDB_V2_TIMEOUT: 60000
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      INFLUXDB_PORT: ${INFLUXDB_PORT}
      SENTRY_DSN: 'https://87d01729e9be480c8d9b80a8a4d57f58@apm.ambalytics.com/12'
      SENTRY_TRACES_SAMPLE_RATE: 1.0
    networks:
      - ambaanalysisnet

  postgres:
    image: postgres
    restart: unless-stopped
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    #ports:
    #  - "5432:5432"
    networks:
      - ambaanalysisnet
    volumes:
      - ./postgres/initdb.d:/docker-entrypoint-initdb.d/

  api:
    image: ghcr.io/ambalytics/amba-analysis-streams-api/amba-analysis-streams-api:latest
    container_name: api
    #ports: does not need to be exposed
    #  - "8080:80"
    depends_on:
      - kafka
      - postgres
    restart: unless-stopped
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KAFKA_BOOTRSTRAP_SERVER: ${KAFKA_BOOTRSTRAP_SERVER}
      INFLUXDB_V2_TOKEN: ${INFLUXDB_TOKEN}
      INFLUXDB_V2_ORG: ${INFLUXDB_ORG}
      INFLUXDB_V2_URL: 'http://influxdb:8086'
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET}
      INFLUXDB_PORT: ${INFLUXDB_PORT}
      SENTRY_DSN: 'https://8f472f79cae545f9994a56a0e0bebf1c@apm.ambalytics.com/11'
      SENTRY_TRACES_SAMPLE_RATE: 1.0
    networks:
      - ambaanalysisnet


  influxdb:
    image: influxdb:2.0.8
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "${INFLUXDB_PORT}:${INFLUXDB_PORT}"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: "setup"
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USER}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_TOKEN}
    networks:
      - ambaanalysisnet

  webserver:
    image: nginx:1.15.12-alpine
    container_name: webserver
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./certbot/conf:/etc/nginx/ssl
      - ./certbot/data:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    environment:
      - PHP_MEMORY_LIMIT=256M
    networks:
      - ambaanalysisnet

  certbot:
    depends_on:
      - webserver
    image: certbot/dns-route53:latest
    container_name: certbot
    volumes:
      # we save our directory of keys on our host server
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/logs:/var/log/letsencrypt
    # command: certonly --dns-route53 --email it@ambalytics.com --agree-tos --no-eff-email -d api-analysis.ambalytics.com
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

networks:
  ambaanalysisnet:

# todo kafka topics
# https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck
# for better waiting
# processed <-> aggregated need same amount of partitions for faust to work
#
# topicname:partition:replica
# "events_unlinked:1:1, events_unlinked-discussed:3:1, events_unlinked-crossref:3:1, events_linked:1:1, events_linked-discussed:3:1, events_unknown:3:1, events_processed:1:1, events_processed-discussed:3:1, events_aggregated:1:1"
