---
#name: amba-analysis-stream

#networks:
#  events_kafka:
#    name: events_kafka


services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    #    restart: unless-stopped
    hostname: zookeeper
#    ports:
#      - "2181:2181"
    networks:
      - backend


  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
#    ports:
#      - "9092:9092"
    hostname: kafka
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "events_unlinked:1:1,events_unlinked-discusses:3:1,events_unlinked-crossref:3:1,events_linked:1:1,events_linked-discusses:3:1,events_unknown:3:1,events_processed:1:1,events_processed-discusses:3:1,events_aggregated:1:1"
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
    networks:
      - backend


  mongo_db:
    image: mongo
    container_name: mongo-db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: events
    networks:
      - backend

#    volumes:
#        - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
# create this file temporary during github workflow

  connector_twitter:
    image: docker.pkg.github.com/ambalytics/amba-analysis-worker-discussion/amba-analysis-worker-discussion:latest
    container_name: twitter-connector
    depends_on:
      - kafka
    networks:
      - backend

  perculator:
    image: twitter-perculator
    container_name: twitter-perculator
    depends_on:
      - connector_twitter
    networks:
      - backend

  worker_twitter:
    image: twitter-worker
    container_name: twitter-worker
    depends_on:
      - connector_twitter
    networks:
      - backend

  connector_mongodb:
    image: mongodb-connector
    container_name: mongodb-connector
    depends_on:
      - mongo_db
    networks:
      - backend

  worker_pubfinder:
    image: pubfinder-worker
    container_name: pubfinder-worker
    depends_on:
      - kafka
    networks:
      - backend

  api:
    image: api
    container_name: api
    ports:
      - "8080:80"
    depends_on:
      - kafka
    networks:
      - backend

networks:
  backend:
    driver: bridge


# https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck
# for better waiting
#
# topicname:partition:replica
# "events_unlinked:1:1, events_unlinked-discussed:3:1, events_unlinked-crossref:3:1, events_linked:1:1, events_linked-discussed:3:1, events_unknown:3:1, events_processed:1:1, events_processed-discussed:3:1, events_aggregated:1:1"

# events_unlinked:1:1
# events_unlinked-discussed:3:1
# events_unlinked-crossref:3:1
# events_linked:1:1
# events_linked-discussed:3:1
# events_unknown:3:1
# events_processed:1:1
# events_processed-discussed:3:1
# events_aggregated:1:1

#  'unlinked': {
#            'own_topic': ['discussed', 'crossref']
#        },
#        'linked': {
#            'own_topic': ['discussed']
#        },
#        'unknown': {
#        },
#        'processed': {
#            'own_topic': ['discussed']
#        },
#        'aggregated': {

